//    Q-> to check whether a graph is bipartite or not (undirected graph)
//    Input-> [[1,2,3],[0,2],[0,1,3],[0,2]]
//    Output-> False


class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<int>color(n,-1);
        
        for(int i=0;i<n;i++)
        {
            if(color[i]==-1)
            {
                queue<pair<int,int>>q;
                q.push({i,-1});
                color[i]=1;
                while(!q.empty())
                {
                    int a=q.front().first;
                    int b=q.front().second;
                    q.pop();
                    for(auto it:graph[a])
                    {
                        if(color[it]==-1)
                        {
                            color[it]=1-color[a];
                            q.push({it,a});    
                        }
                        else if(color[it]==color[a])
                        {
                            return false;
                        }
                    }    
                }
            }
                    
        }
        return true;
    }
};
